var data = {lines:[
{"lineNum":"    1","line":"/// The number of bytes that will be read and hashed for a file"},
{"lineNum":"    2","line":"/// for the `FirstKBytesProxy` pass"},
{"lineNum":"    3","line":"pub const FIRST_K_BYTES: usize = 4096;"},
{"lineNum":"    4","line":""},
{"lineNum":"    5","line":"/// Uniquely identify a file by its device id and inode"},
{"lineNum":"    6","line":"#[derive(Clone, Copy, Hash, PartialEq, Eq)]","class":"linePartCov","hits":"11","order":"4723","possible_hits":"12",},
{"lineNum":"    7","line":"pub struct ID {"},
{"lineNum":"    8","line":"    /// Device ID (unique to Linux)"},
{"lineNum":"    9","line":"    pub dev: u64,","class":"linePartCov","hits":"10","order":"4724","possible_hits":"11",},
{"lineNum":"   10","line":"    /// Filesystem Inode"},
{"lineNum":"   11","line":"    pub inode: u64,","class":"linePartCov","hits":"11","order":"4725","possible_hits":"13",},
{"lineNum":"   12","line":"}"},
{"lineNum":"   13","line":""},
{"lineNum":"   14","line":"/// Represent the first K bytes of a file"},
{"lineNum":"   15","line":""},
{"lineNum":"   16","line":"pub fn prettify_bytes(b: u64) -> String {"},
{"lineNum":"   17","line":"    if b < 1024 {"},
{"lineNum":"   18","line":"        format!(\"{} B\", b)"},
{"lineNum":"   19","line":"    } else if b < 1024 * 1024 {"},
{"lineNum":"   20","line":"        format!(\"{} KB\", b / 1024)"},
{"lineNum":"   21","line":"    } else if b < 1024 * 1024 * 1024 {"},
{"lineNum":"   22","line":"        format!(\"{} MB\", b / 1024 / 1024)"},
{"lineNum":"   23","line":"    } else if b < 1024 * 1024 * 1024 * 1024 {"},
{"lineNum":"   24","line":"        format!(\"{} GB\", b / 1024 / 1024 / 1024)"},
{"lineNum":"   25","line":"    } else {"},
{"lineNum":"   26","line":"        // insert commas"},
{"lineNum":"   27","line":"        let mut s = format!(\"{} B\", b);"},
{"lineNum":"   28","line":"        let mut i = s.len() as i64 - 2 - 3;"},
{"lineNum":"   29","line":"        while i > 0 {"},
{"lineNum":"   30","line":"            s.insert(i as usize, \',\');"},
{"lineNum":"   31","line":"            i -= 3;"},
{"lineNum":"   32","line":"        }"},
{"lineNum":"   33","line":"        s"},
{"lineNum":"   34","line":"    }"},
{"lineNum":"   35","line":"}"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "smllr-cd1387de2be9f35d", "date" : "2017-12-06 19:01:08", "instrumented" : 3, "covered" : 3,};
var merged_data = [];
