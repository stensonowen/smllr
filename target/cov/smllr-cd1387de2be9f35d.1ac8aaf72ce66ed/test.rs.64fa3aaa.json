var data = {lines:[
{"lineNum":"    1","line":"#[cfg(test)]"},
{"lineNum":"    2","line":"mod test {"},
{"lineNum":"    3","line":""},
{"lineNum":"    4","line":"    use helpers::ID;"},
{"lineNum":"    5","line":"    use actor::{FileActor, FileDeleter, FileLinker, FilePrinter};"},
{"lineNum":"    6","line":"    use actor::selector::{DateSelect, PathSelect, Selector};"},
{"lineNum":"    7","line":"    use vfs::{FileType, TestFile, TestFileSystem, TestMD};"},
{"lineNum":"    8","line":"    use catalog::proxy::Duplicates;"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"    use std::path::{Path, PathBuf};"},
{"lineNum":"   11","line":"    use std::time::{Duration, UNIX_EPOCH};"},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"    // selector tests"},
{"lineNum":"   14","line":""},
{"lineNum":"   15","line":"    #[test]"},
{"lineNum":"   16","line":"    fn select_shortest() {","class":"linePartCov","hits":"1","order":"4515","possible_hits":"15",},
{"lineNum":"   17","line":"        // select the file closest to the root"},
{"lineNum":"   18","line":"        let fs = TestFileSystem::new();","class":"lineCov","hits":"1","order":"4516","possible_hits":"1",},
{"lineNum":"   19","line":"        {","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   20","line":"            let mut fs = fs.borrow_mut();","class":"lineCov","hits":"1","order":"4517","possible_hits":"1",},
{"lineNum":"   21","line":"            fs.create_dir(\"/\");","class":"linePartCov","hits":"2","order":"4518","possible_hits":"4",},
{"lineNum":"   22","line":"            fs.create_dir(\"/x\");","class":"linePartCov","hits":"2","order":"4519","possible_hits":"3",},
{"lineNum":"   23","line":"            fs.create_dir(\"/x/y\");","class":"linePartCov","hits":"2","order":"4520","possible_hits":"3",},
{"lineNum":"   24","line":"            fs.create_dir(\"/x/y/z\");","class":"linePartCov","hits":"2","order":"4521","possible_hits":"3",},
{"lineNum":"   25","line":"            fs.add(TestFile::new(\"/a\"));","class":"lineCov","hits":"2","order":"4522","possible_hits":"2",},
{"lineNum":"   26","line":"            fs.add(TestFile::new(\"/x/b\"));","class":"lineCov","hits":"1","order":"4523","possible_hits":"1",},
{"lineNum":"   27","line":"            fs.add(TestFile::new(\"/x/y/c\"));","class":"lineCov","hits":"1","order":"4524","possible_hits":"1",},
{"lineNum":"   28","line":"            fs.add(TestFile::new(\"/x/y/z/d\"));","class":"lineCov","hits":"1","order":"4525","possible_hits":"1",},
{"lineNum":"   29","line":"        }","class":"linePartCov","hits":"1","order":"4526","possible_hits":"2",},
{"lineNum":"   30","line":"        let paths = vec![\"/a\", \"/x/b\", \"/x/y/c\", \"/x/y/z/d\"];","class":"lineCov","hits":"1","order":"4527","possible_hits":"1",},
{"lineNum":"   31","line":"        let files = Duplicates(paths.iter().map(PathBuf::from).collect());","class":"lineCov","hits":"4","order":"4528","possible_hits":"4",},
{"lineNum":"   32","line":"        let shortest = PathSelect::new(fs).select(&files);","class":"lineCov","hits":"3","order":"4529","possible_hits":"3",},
{"lineNum":"   33","line":"        assert_eq!(shortest, Path::new(\"/a\"));","class":"linePartCov","hits":"3","order":"4530","possible_hits":"7",},
{"lineNum":"   34","line":"    }","class":"linePartCov","hits":"2","order":"4531","possible_hits":"5",},
{"lineNum":"   35","line":""},
{"lineNum":"   36","line":"    #[test]"},
{"lineNum":"   37","line":"    fn select_longest() {","class":"linePartCov","hits":"1","order":"4072","possible_hits":"14",},
{"lineNum":"   38","line":"        // select the file farthest from to the root"},
{"lineNum":"   39","line":"        let fs = TestFileSystem::new();","class":"lineCov","hits":"1","order":"4074","possible_hits":"1",},
{"lineNum":"   40","line":"        {","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   41","line":"            let mut fs = fs.borrow_mut();","class":"lineCov","hits":"1","order":"4075","possible_hits":"1",},
{"lineNum":"   42","line":"            fs.create_dir(\"/\");","class":"linePartCov","hits":"2","order":"4076","possible_hits":"4",},
{"lineNum":"   43","line":"            fs.create_dir(\"/x\");","class":"linePartCov","hits":"2","order":"4077","possible_hits":"3",},
{"lineNum":"   44","line":"            fs.create_dir(\"/x/y\");","class":"linePartCov","hits":"2","order":"4078","possible_hits":"3",},
{"lineNum":"   45","line":"            fs.create_dir(\"/x/y/z\");","class":"linePartCov","hits":"2","order":"4079","possible_hits":"3",},
{"lineNum":"   46","line":"            fs.add(TestFile::new(\"/a\"));","class":"lineCov","hits":"2","order":"4080","possible_hits":"2",},
{"lineNum":"   47","line":"            fs.add(TestFile::new(\"/x/b\"));","class":"lineCov","hits":"1","order":"4081","possible_hits":"1",},
{"lineNum":"   48","line":"            fs.add(TestFile::new(\"/x/y/c\"));","class":"lineCov","hits":"1","order":"4082","possible_hits":"1",},
{"lineNum":"   49","line":"            fs.add(TestFile::new(\"/x/y/z/d\"));","class":"lineCov","hits":"1","order":"4083","possible_hits":"1",},
{"lineNum":"   50","line":"        }","class":"linePartCov","hits":"1","order":"4098","possible_hits":"2",},
{"lineNum":"   51","line":"        let paths = vec![\"/a\", \"/x/b\", \"/x/y/c\", \"/x/y/z/d\"];","class":"lineCov","hits":"1","order":"4099","possible_hits":"1",},
{"lineNum":"   52","line":"        let files = Duplicates(paths.iter().map(PathBuf::from).collect());","class":"lineCov","hits":"4","order":"4100","possible_hits":"4",},
{"lineNum":"   53","line":"        let mut selector = PathSelect::new(fs);","class":"lineCov","hits":"2","order":"4101","possible_hits":"2",},
{"lineNum":"   54","line":"        selector.reverse();","class":"linePartCov","hits":"1","order":"4102","possible_hits":"2",},
{"lineNum":"   55","line":"        let longest = selector.select(&files);","class":"lineCov","hits":"2","order":"4106","possible_hits":"2",},
{"lineNum":"   56","line":"        assert_eq!(longest, Path::new(\"/x/y/z/d\"));","class":"linePartCov","hits":"3","order":"4138","possible_hits":"7",},
{"lineNum":"   57","line":"    }","class":"linePartCov","hits":"2","order":"4146","possible_hits":"5",},
{"lineNum":"   58","line":""},
{"lineNum":"   59","line":"    #[test]"},
{"lineNum":"   60","line":"    fn select_newest() {","class":"linePartCov","hits":"1","order":"4309","possible_hits":"14",},
{"lineNum":"   61","line":"        // select the file most recently modified"},
{"lineNum":"   62","line":"        let fs = TestFileSystem::new();","class":"lineCov","hits":"1","order":"4310","possible_hits":"1",},
{"lineNum":"   63","line":"        let time_a = UNIX_EPOCH + Duration::new(1, 0); // + 1 second","class":"lineCov","hits":"1","order":"4311","possible_hits":"1",},
{"lineNum":"   64","line":"        let time_b = UNIX_EPOCH + Duration::new(2, 0); // + 2 seconds","class":"lineCov","hits":"1","order":"4325","possible_hits":"1",},
{"lineNum":"   65","line":"        let time_c = UNIX_EPOCH + Duration::new(3, 0); // + 3 seconds","class":"lineCov","hits":"1","order":"4326","possible_hits":"1",},
{"lineNum":"   66","line":"        let time_d = UNIX_EPOCH + Duration::new(4, 0); // + 4 seconds","class":"lineCov","hits":"1","order":"4328","possible_hits":"1",},
{"lineNum":"   67","line":"        let md_a = TestMD::new().with_mod_time(time_a);","class":"lineCov","hits":"1","order":"4330","possible_hits":"1",},
{"lineNum":"   68","line":"        let md_b = TestMD::new().with_mod_time(time_b);","class":"lineCov","hits":"1","order":"4340","possible_hits":"1",},
{"lineNum":"   69","line":"        let md_c = TestMD::new().with_mod_time(time_c);","class":"lineCov","hits":"1","order":"4341","possible_hits":"1",},
{"lineNum":"   70","line":"        let md_d = TestMD::new().with_mod_time(time_d);","class":"lineCov","hits":"1","order":"4342","possible_hits":"1",},
{"lineNum":"   71","line":"        {","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   72","line":"            let mut fs = fs.borrow_mut();","class":"lineCov","hits":"1","order":"4343","possible_hits":"1",},
{"lineNum":"   73","line":"            fs.create_dir(\"/\");","class":"linePartCov","hits":"2","order":"4344","possible_hits":"4",},
{"lineNum":"   74","line":"            fs.create_dir(\"/x\");","class":"linePartCov","hits":"2","order":"4345","possible_hits":"3",},
{"lineNum":"   75","line":"            fs.create_dir(\"/x/y\");","class":"linePartCov","hits":"2","order":"4346","possible_hits":"3",},
{"lineNum":"   76","line":"            fs.create_dir(\"/x/y/z\");","class":"linePartCov","hits":"2","order":"4347","possible_hits":"3",},
{"lineNum":"   77","line":"            fs.add(TestFile::new(\"/a\").with_metadata(md_a));","class":"linePartCov","hits":"2","order":"4349","possible_hits":"3",},
{"lineNum":"   78","line":"            fs.add(TestFile::new(\"/x/b\").with_metadata(md_b));","class":"linePartCov","hits":"2","order":"4351","possible_hits":"3",},
{"lineNum":"   79","line":"            fs.add(TestFile::new(\"/x/y/c\").with_metadata(md_c));","class":"linePartCov","hits":"2","order":"4477","possible_hits":"3",},
{"lineNum":"   80","line":"            fs.add(TestFile::new(\"/x/y/z/d\").with_metadata(md_d));","class":"linePartCov","hits":"2","order":"4478","possible_hits":"3",},
{"lineNum":"   81","line":"        }","class":"linePartCov","hits":"1","order":"4479","possible_hits":"2",},
{"lineNum":"   82","line":"        let paths = vec![\"/a\", \"/x/b\", \"/x/y/c\", \"/x/y/z/d\"];","class":"lineCov","hits":"1","order":"4480","possible_hits":"1",},
{"lineNum":"   83","line":"        let files = Duplicates(paths.iter().map(PathBuf::from).collect());","class":"lineCov","hits":"4","order":"4481","possible_hits":"4",},
{"lineNum":"   84","line":"        let newest = DateSelect::new(fs).select(&files);","class":"lineCov","hits":"3","order":"4482","possible_hits":"3",},
{"lineNum":"   85","line":"        assert_eq!(newest, Path::new(\"/x/y/z/d\"));","class":"linePartCov","hits":"2","order":"4510","possible_hits":"6",},
{"lineNum":"   86","line":"    }","class":"linePartCov","hits":"2","order":"4511","possible_hits":"4",},
{"lineNum":"   87","line":""},
{"lineNum":"   88","line":"    #[test]"},
{"lineNum":"   89","line":"    fn select_oldest() {","class":"linePartCov","hits":"1","order":"4410","possible_hits":"14",},
{"lineNum":"   90","line":"        // select the file least recently modified"},
{"lineNum":"   91","line":"        let fs = TestFileSystem::new();","class":"lineCov","hits":"1","order":"4412","possible_hits":"1",},
{"lineNum":"   92","line":"        let time_a = UNIX_EPOCH + Duration::new(1, 0); // + 1 second","class":"lineCov","hits":"1","order":"4415","possible_hits":"1",},
{"lineNum":"   93","line":"        let time_b = UNIX_EPOCH + Duration::new(2, 0); // + 2 seconds","class":"lineCov","hits":"1","order":"4417","possible_hits":"1",},
{"lineNum":"   94","line":"        let time_c = UNIX_EPOCH + Duration::new(3, 0); // + 3 seconds","class":"lineCov","hits":"1","order":"4418","possible_hits":"1",},
{"lineNum":"   95","line":"        let time_d = UNIX_EPOCH + Duration::new(4, 0); // + 4 seconds","class":"lineCov","hits":"1","order":"4419","possible_hits":"1",},
{"lineNum":"   96","line":"        let md_a = TestMD::new().with_mod_time(time_a);","class":"lineCov","hits":"1","order":"4420","possible_hits":"1",},
{"lineNum":"   97","line":"        let md_b = TestMD::new().with_mod_time(time_b);","class":"lineCov","hits":"1","order":"4421","possible_hits":"1",},
{"lineNum":"   98","line":"        let md_c = TestMD::new().with_mod_time(time_c);","class":"lineCov","hits":"1","order":"4423","possible_hits":"1",},
{"lineNum":"   99","line":"        let md_d = TestMD::new().with_mod_time(time_d);","class":"lineCov","hits":"1","order":"4425","possible_hits":"1",},
{"lineNum":"  100","line":"        {","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  101","line":"            let mut fs = fs.borrow_mut();","class":"lineCov","hits":"1","order":"4431","possible_hits":"1",},
{"lineNum":"  102","line":"            fs.create_dir(\"/\");","class":"linePartCov","hits":"2","order":"4433","possible_hits":"4",},
{"lineNum":"  103","line":"            fs.create_dir(\"/x\");","class":"linePartCov","hits":"2","order":"4434","possible_hits":"3",},
{"lineNum":"  104","line":"            fs.create_dir(\"/x/y\");","class":"linePartCov","hits":"2","order":"4436","possible_hits":"3",},
{"lineNum":"  105","line":"            fs.create_dir(\"/x/y/z\");","class":"linePartCov","hits":"2","order":"4437","possible_hits":"3",},
{"lineNum":"  106","line":"            fs.add(TestFile::new(\"/a\").with_metadata(md_a));","class":"linePartCov","hits":"2","order":"4439","possible_hits":"3",},
{"lineNum":"  107","line":"            fs.add(TestFile::new(\"/x/b\").with_metadata(md_b));","class":"linePartCov","hits":"2","order":"4441","possible_hits":"3",},
{"lineNum":"  108","line":"            fs.add(TestFile::new(\"/x/y/c\").with_metadata(md_c));","class":"linePartCov","hits":"2","order":"4442","possible_hits":"3",},
{"lineNum":"  109","line":"            fs.add(TestFile::new(\"/x/y/z/d\").with_metadata(md_d));","class":"linePartCov","hits":"2","order":"4444","possible_hits":"3",},
{"lineNum":"  110","line":"        }","class":"linePartCov","hits":"1","order":"4446","possible_hits":"2",},
{"lineNum":"  111","line":"        let paths = vec![\"/a\", \"/x/b\", \"/x/y/c\", \"/x/y/z/d\"];","class":"lineCov","hits":"1","order":"4448","possible_hits":"1",},
{"lineNum":"  112","line":"        let files = Duplicates(paths.iter().map(PathBuf::from).collect());","class":"lineCov","hits":"4","order":"4449","possible_hits":"4",},
{"lineNum":"  113","line":""},
{"lineNum":"  114","line":"        let mut selector = DateSelect::new(fs.clone());","class":"linePartCov","hits":"2","order":"4451","possible_hits":"3",},
{"lineNum":"  115","line":"        selector.reverse();","class":"linePartCov","hits":"1","order":"4456","possible_hits":"2",},
{"lineNum":"  116","line":"        let oldest = selector.select(&files);","class":"lineCov","hits":"2","order":"4462","possible_hits":"2",},
{"lineNum":"  117","line":"        assert_eq!(oldest, Path::new(\"/a\"));","class":"linePartCov","hits":"3","order":"4507","possible_hits":"7",},
{"lineNum":"  118","line":"    }","class":"linePartCov","hits":"2","order":"4508","possible_hits":"6",},
{"lineNum":"  119","line":""},
{"lineNum":"  120","line":"    // actor tests"},
{"lineNum":"  121","line":""},
{"lineNum":"  122","line":"    #[test]"},
{"lineNum":"  123","line":"    fn actor_print() {","class":"linePartCov","hits":"1","order":"2354","possible_hits":"11",},
{"lineNum":"  124","line":"        // run `FilePrinter::act()` on a set of duplicates"},
{"lineNum":"  125","line":"        // verify the filesystem doesn\'t change"},
{"lineNum":"  126","line":""},
{"lineNum":"  127","line":"        let fs = TestFileSystem::new();","class":"lineCov","hits":"1","order":"2355","possible_hits":"1",},
{"lineNum":"  128","line":"        {","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  129","line":"            let mut fs = fs.borrow_mut();","class":"lineCov","hits":"1","order":"2541","possible_hits":"1",},
{"lineNum":"  130","line":"            fs.create_dir(\"/\");","class":"linePartCov","hits":"2","order":"2557","possible_hits":"4",},
{"lineNum":"  131","line":"            fs.add(TestFile::new(\"/a\").with_metadata(TestMD::new()));","class":"linePartCov","hits":"2","order":"2847","possible_hits":"4",},
{"lineNum":"  132","line":"            fs.create_dir(\"/x\");","class":"linePartCov","hits":"2","order":"3039","possible_hits":"3",},
{"lineNum":"  133","line":"            fs.add(TestFile::new(\"/x/b\").with_metadata(TestMD::new()));","class":"linePartCov","hits":"2","order":"3040","possible_hits":"4",},
{"lineNum":"  134","line":"            fs.add(TestFile::new(\"/x/c\").with_metadata(TestMD::new()));","class":"linePartCov","hits":"2","order":"3049","possible_hits":"4",},
{"lineNum":"  135","line":"        };","class":"linePartCov","hits":"1","order":"3050","possible_hits":"2",},
{"lineNum":"  136","line":"        let paths = vec![\"/a\", \"/x/b\", \"/x/c\"];","class":"lineCov","hits":"1","order":"3054","possible_hits":"1",},
{"lineNum":"  137","line":"        let files = Duplicates(paths.iter().map(PathBuf::from).collect());","class":"lineCov","hits":"4","order":"3079","possible_hits":"4",},
{"lineNum":"  138","line":""},
{"lineNum":"  139","line":"        let selector = PathSelect::new(fs.clone());","class":"linePartCov","hits":"2","order":"3207","possible_hits":"3",},
{"lineNum":"  140","line":"        let mut actor = FilePrinter::new(fs.clone(), selector);","class":"lineCov","hits":"1","order":"3231","possible_hits":"1",},
{"lineNum":"  141","line":"        actor.act(files);","class":"linePartCov","hits":"1","order":"3237","possible_hits":"2",},
{"lineNum":"  142","line":"        assert_eq!(5, fs.borrow().num_elements());","class":"linePartCov","hits":"3","order":"3496","possible_hits":"4",},
{"lineNum":"  143","line":"    }","class":"linePartCov","hits":"1","order":"3500","possible_hits":"5",},
{"lineNum":"  144","line":""},
{"lineNum":"  145","line":"    #[test]"},
{"lineNum":"  146","line":"    fn actor_delete() {","class":"linePartCov","hits":"1","order":"2487","possible_hits":"11",},
{"lineNum":"  147","line":"        // run `FileDeleter::act()` on a set of duplicates"},
{"lineNum":"  148","line":"        // verify the filesystem only has one file left"},
{"lineNum":"  149","line":""},
{"lineNum":"  150","line":"        let fs = TestFileSystem::new();","class":"lineCov","hits":"1","order":"2488","possible_hits":"1",},
{"lineNum":"  151","line":"        {","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  152","line":"            let mut fs = fs.borrow_mut();","class":"lineCov","hits":"1","order":"4355","possible_hits":"1",},
{"lineNum":"  153","line":"            fs.create_dir(\"/\");","class":"linePartCov","hits":"2","order":"4356","possible_hits":"4",},
{"lineNum":"  154","line":"            fs.add(TestFile::new(\"/a\").with_metadata(TestMD::new()));","class":"linePartCov","hits":"2","order":"4359","possible_hits":"4",},
{"lineNum":"  155","line":"            fs.create_dir(\"/x\");","class":"linePartCov","hits":"2","order":"4361","possible_hits":"3",},
{"lineNum":"  156","line":"            fs.add(TestFile::new(\"/x/b\").with_metadata(TestMD::new()));","class":"linePartCov","hits":"2","order":"4363","possible_hits":"4",},
{"lineNum":"  157","line":"            fs.add(TestFile::new(\"/x/c\").with_metadata(TestMD::new()));","class":"linePartCov","hits":"2","order":"4365","possible_hits":"4",},
{"lineNum":"  158","line":"        };","class":"linePartCov","hits":"1","order":"4367","possible_hits":"2",},
{"lineNum":"  159","line":"        let paths = vec![\"/a\", \"/x/b\", \"/x/c\"];","class":"lineCov","hits":"1","order":"4369","possible_hits":"1",},
{"lineNum":"  160","line":"        let files = Duplicates(paths.iter().map(PathBuf::from).collect());","class":"lineCov","hits":"4","order":"4371","possible_hits":"4",},
{"lineNum":"  161","line":""},
{"lineNum":"  162","line":"        let selector = PathSelect::new(fs.clone());","class":"linePartCov","hits":"2","order":"4375","possible_hits":"3",},
{"lineNum":"  163","line":"        let mut actor = FileDeleter::new(fs.clone(), selector);","class":"lineCov","hits":"1","order":"4377","possible_hits":"1",},
{"lineNum":"  164","line":"        actor.act(files);","class":"linePartCov","hits":"1","order":"4388","possible_hits":"2",},
{"lineNum":"  165","line":"        assert_eq!(3, fs.borrow().num_elements());","class":"linePartCov","hits":"3","order":"4435","possible_hits":"4",},
{"lineNum":"  166","line":"    }","class":"linePartCov","hits":"1","order":"4438","possible_hits":"5",},
{"lineNum":"  167","line":""},
{"lineNum":"  168","line":"    #[test]"},
{"lineNum":"  169","line":"    fn actor_link() {","class":"linePartCov","hits":"1","order":"2447","possible_hits":"20",},
{"lineNum":"  170","line":"        // run `FileLinker::act()` on a set of duplicates"},
{"lineNum":"  171","line":"        // verify the filesystem only has links to one file"},
{"lineNum":"  172","line":""},
{"lineNum":"  173","line":"        let fs = TestFileSystem::new();","class":"lineCov","hits":"1","order":"2449","possible_hits":"1",},
{"lineNum":"  174","line":"        {","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  175","line":"            let mut fs = fs.borrow_mut();","class":"lineCov","hits":"1","order":"4199","possible_hits":"1",},
{"lineNum":"  176","line":"            fs.create_dir(\"/\"); // inode #0","class":"linePartCov","hits":"2","order":"4200","possible_hits":"4",},
{"lineNum":"  177","line":"            fs.add(","class":"linePartCov","hits":"2","order":"4201","possible_hits":"6",},
{"lineNum":"  178","line":"                TestFile::new(\"/a\")","class":"lineCov","hits":"3","order":"4202","possible_hits":"3",},
{"lineNum":"  179","line":"                    .with_inode(1)","class":"lineCov","hits":"1","order":"4208","possible_hits":"1",},
{"lineNum":"  180","line":"                    .with_metadata(TestMD::new()),","class":"linePartCov","hits":"1","order":"4209","possible_hits":"3",},
{"lineNum":"  181","line":"            );"},
{"lineNum":"  182","line":"            fs.add(","class":"linePartCov","hits":"2","order":"4211","possible_hits":"6",},
{"lineNum":"  183","line":"                TestFile::new(\"/b\")","class":"lineCov","hits":"3","order":"4212","possible_hits":"3",},
{"lineNum":"  184","line":"                    .with_inode(2)","class":"lineCov","hits":"1","order":"4213","possible_hits":"1",},
{"lineNum":"  185","line":"                    .with_metadata(TestMD::new()),","class":"linePartCov","hits":"1","order":"4214","possible_hits":"3",},
{"lineNum":"  186","line":"            );"},
{"lineNum":"  187","line":"            fs.add(","class":"linePartCov","hits":"2","order":"4215","possible_hits":"6",},
{"lineNum":"  188","line":"                TestFile::new(\"/c\")","class":"lineCov","hits":"3","order":"4216","possible_hits":"3",},
{"lineNum":"  189","line":"                    .with_inode(3)","class":"lineCov","hits":"1","order":"4217","possible_hits":"1",},
{"lineNum":"  190","line":"                    .with_metadata(TestMD::new()),","class":"linePartCov","hits":"1","order":"4218","possible_hits":"3",},
{"lineNum":"  191","line":"            );"},
{"lineNum":"  192","line":"        };","class":"linePartCov","hits":"1","order":"4219","possible_hits":"2",},
{"lineNum":"  193","line":"        let paths = vec![\"/a\", \"/b\", \"/c\"];","class":"lineCov","hits":"1","order":"4220","possible_hits":"1",},
{"lineNum":"  194","line":"        let files = Duplicates(paths.iter().map(PathBuf::from).collect());","class":"lineCov","hits":"4","order":"4221","possible_hits":"4",},
{"lineNum":"  195","line":""},
{"lineNum":"  196","line":"        // currently all files are identical and distinct"},
{"lineNum":"  197","line":"        // remember that the root dir counts and has an inode"},
{"lineNum":"  198","line":"        assert_eq!(4, fs.borrow().num_elements(), \"sanity check\");","class":"linePartCov","hits":"3","order":"4222","possible_hits":"4",},
{"lineNum":"  199","line":"        assert_eq!(4, fs.borrow().num_inodes(), \"sanity check\");","class":"linePartCov","hits":"3","order":"4223","possible_hits":"4",},
{"lineNum":"  200","line":""},
{"lineNum":"  201","line":"        let selector = PathSelect::new(fs.clone());","class":"lineCov","hits":"1","order":"4224","possible_hits":"1",},
{"lineNum":"  202","line":"        let mut actor = FileLinker::new(fs.clone(), selector);","class":"lineCov","hits":"1","order":"4225","possible_hits":"1",},
{"lineNum":"  203","line":"        actor.act(files);","class":"linePartCov","hits":"1","order":"4226","possible_hits":"2",},
{"lineNum":"  204","line":""},
{"lineNum":"  205","line":"        // after acting, all files should have the same inode"},
{"lineNum":"  206","line":"        assert_eq!(4, fs.borrow().num_elements());","class":"linePartCov","hits":"3","order":"4307","possible_hits":"4",},
{"lineNum":"  207","line":"        assert_eq!(2, fs.borrow().num_inodes());","class":"linePartCov","hits":"3","order":"4308","possible_hits":"4",},
{"lineNum":"  208","line":"    }","class":"linePartCov","hits":"1","order":"4350","possible_hits":"6",},
{"lineNum":"  209","line":""},
{"lineNum":"  210","line":"    #[test]"},
{"lineNum":"  211","line":"    fn actor_link_across_devices() {","class":"linePartCov","hits":"1","order":"2416","possible_hits":"20",},
{"lineNum":"  212","line":"        // run `FileLinker::act()` on a set of duplicates spread across devices"},
{"lineNum":"  213","line":"        // verify the filesystem doesn\'t fail and doesn\'t change anything"},
{"lineNum":"  214","line":""},
{"lineNum":"  215","line":"        let fs = TestFileSystem::new();","class":"lineCov","hits":"1","order":"2418","possible_hits":"1",},
{"lineNum":"  216","line":"        {","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  217","line":"            let mut fs = fs.borrow_mut();","class":"lineCov","hits":"1","order":"4006","possible_hits":"1",},
{"lineNum":"  218","line":"            fs.add(","class":"linePartCov","hits":"2","order":"4007","possible_hits":"6",},
{"lineNum":"  219","line":"                TestFile::new(\"/\")","class":"lineCov","hits":"3","order":"4008","possible_hits":"3",},
{"lineNum":"  220","line":"                    .with_kind(FileType::Dir)","class":"lineCov","hits":"2","order":"4009","possible_hits":"2",},
{"lineNum":"  221","line":"                    .with_metadata(TestMD::new().with_id(ID { inode: 1, dev: 10 })),","class":"linePartCov","hits":"1","order":"4015","possible_hits":"3",},
{"lineNum":"  222","line":"            );"},
{"lineNum":"  223","line":"            fs.add(","class":"linePartCov","hits":"2","order":"4022","possible_hits":"6",},
{"lineNum":"  224","line":"                TestFile::new(\"/a\").with_metadata(TestMD::new().with_id(ID { inode: 2, dev: 20 })),","class":"linePartCov","hits":"4","order":"4023","possible_hits":"5",},
{"lineNum":"  225","line":"            );"},
{"lineNum":"  226","line":"            fs.add(","class":"linePartCov","hits":"2","order":"4024","possible_hits":"6",},
{"lineNum":"  227","line":"                TestFile::new(\"/b\").with_metadata(TestMD::new().with_id(ID { inode: 3, dev: 20 })),","class":"linePartCov","hits":"4","order":"4025","possible_hits":"5",},
{"lineNum":"  228","line":"            );"},
{"lineNum":"  229","line":"            fs.add(","class":"linePartCov","hits":"2","order":"4026","possible_hits":"6",},
{"lineNum":"  230","line":"                TestFile::new(\"/c\").with_metadata(TestMD::new().with_id(ID { inode: 4, dev: 20 })),","class":"linePartCov","hits":"4","order":"4027","possible_hits":"5",},
{"lineNum":"  231","line":"            );"},
{"lineNum":"  232","line":"        };","class":"linePartCov","hits":"1","order":"4028","possible_hits":"2",},
{"lineNum":"  233","line":"        let paths = vec![\"/a\", \"/b\", \"/c\"];","class":"lineCov","hits":"1","order":"4029","possible_hits":"1",},
{"lineNum":"  234","line":"        let files = Duplicates(paths.iter().map(PathBuf::from).collect());","class":"lineCov","hits":"4","order":"4030","possible_hits":"4",},
{"lineNum":"  235","line":""},
{"lineNum":"  236","line":"        // currently all files are identical and distinct"},
{"lineNum":"  237","line":"        // remember that the root dir counts and has an inode"},
{"lineNum":"  238","line":"        assert_eq!(4, fs.borrow().num_elements(), \"sanity check\");","class":"linePartCov","hits":"3","order":"4031","possible_hits":"4",},
{"lineNum":"  239","line":"        assert_eq!(4, fs.borrow().num_inodes(), \"sanity check\");","class":"linePartCov","hits":"3","order":"4032","possible_hits":"4",},
{"lineNum":"  240","line":""},
{"lineNum":"  241","line":"        let selector = PathSelect::new(fs.clone());","class":"lineCov","hits":"1","order":"4159","possible_hits":"1",},
{"lineNum":"  242","line":"        let mut actor = FileLinker::new(fs.clone(), selector);","class":"lineCov","hits":"1","order":"4160","possible_hits":"1",},
{"lineNum":"  243","line":"        actor.act(files);","class":"linePartCov","hits":"1","order":"4166","possible_hits":"2",},
{"lineNum":"  244","line":""},
{"lineNum":"  245","line":"        // after acting, nothing should have happened (except a warning message)"},
{"lineNum":"  246","line":"        assert_eq!(4, fs.borrow().num_elements());","class":"linePartCov","hits":"3","order":"4195","possible_hits":"4",},
{"lineNum":"  247","line":"        assert_eq!(4, fs.borrow().num_inodes());","class":"linePartCov","hits":"3","order":"4196","possible_hits":"4",},
{"lineNum":"  248","line":"    }","class":"linePartCov","hits":"1","order":"4197","possible_hits":"6",},
{"lineNum":"  249","line":"}"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "smllr-cd1387de2be9f35d", "date" : "2017-12-06 19:01:08", "instrumented" : 179, "covered" : 171,};
var merged_data = [];
