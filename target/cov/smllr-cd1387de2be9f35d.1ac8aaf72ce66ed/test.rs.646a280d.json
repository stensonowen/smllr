var data = {lines:[
{"lineNum":"    1","line":"#[cfg(test)]"},
{"lineNum":"    2","line":"mod test {"},
{"lineNum":"    3","line":""},
{"lineNum":"    4","line":"    use vfs::{TestFile, TestFileSystem, TestMD};"},
{"lineNum":"    5","line":"    use catalog::FileCataloger;"},
{"lineNum":"    6","line":"    use hash::{Md5Sum, Sha3Sum};"},
{"lineNum":"    7","line":""},
{"lineNum":"    8","line":"    use std::path::PathBuf;"},
{"lineNum":"    9","line":"    use std::collections::HashSet;"},
{"lineNum":"   10","line":""},
{"lineNum":"   11","line":"    #[test]"},
{"lineNum":"   12","line":"    fn dup_all_unique() {","class":"linePartCov","hits":"1","order":"4532","possible_hits":"2",},
{"lineNum":"   13","line":"        // completely distinct files should not be flagged as duplicates"},
{"lineNum":"   14","line":"        // they share no criteria in common (inode/size/hash/beginning)"},
{"lineNum":"   15","line":""},
{"lineNum":"   16","line":"        let fs = TestFileSystem::new();","class":"lineCov","hits":"1","order":"4533","possible_hits":"1",},
{"lineNum":"   17","line":"        {","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   18","line":"            let mut fs = fs.borrow_mut();","class":"lineCov","hits":"1","order":"4534","possible_hits":"1",},
{"lineNum":"   19","line":"            fs.create_dir(\"/\");","class":"linePartCov","hits":"2","order":"4535","possible_hits":"4",},
{"lineNum":"   20","line":"            fs.add(","class":"linePartCov","hits":"1","order":"4536","possible_hits":"7",},
{"lineNum":"   21","line":"                TestFile::new(\"/a\")","class":"lineCov","hits":"4","order":"4537","possible_hits":"4",},
{"lineNum":"   22","line":"                    .with_contents(String::from(\"A\"))","class":"linePartCov","hits":"2","order":"4538","possible_hits":"3",},
{"lineNum":"   23","line":"                    .with_metadata(TestMD::new())","class":"linePartCov","hits":"1","order":"4544","possible_hits":"3",},
{"lineNum":"   24","line":"                    .with_inode(1),"},
{"lineNum":"   25","line":"            );"},
{"lineNum":"   26","line":"            fs.add(","class":"linePartCov","hits":"1","order":"4550","possible_hits":"7",},
{"lineNum":"   27","line":"                TestFile::new(\"/b\")","class":"lineCov","hits":"4","order":"4551","possible_hits":"4",},
{"lineNum":"   28","line":"                    .with_contents(String::from(\"BB\"))","class":"linePartCov","hits":"2","order":"4552","possible_hits":"3",},
{"lineNum":"   29","line":"                    .with_metadata(TestMD::new())","class":"linePartCov","hits":"1","order":"4553","possible_hits":"3",},
{"lineNum":"   30","line":"                    .with_inode(2),"},
{"lineNum":"   31","line":"            );"},
{"lineNum":"   32","line":"            fs.add(","class":"linePartCov","hits":"1","order":"4556","possible_hits":"7",},
{"lineNum":"   33","line":"                TestFile::new(\"/c\")","class":"lineCov","hits":"4","order":"4558","possible_hits":"4",},
{"lineNum":"   34","line":"                    .with_contents(String::from(\"CCC\"))","class":"linePartCov","hits":"2","order":"4560","possible_hits":"3",},
{"lineNum":"   35","line":"                    .with_metadata(TestMD::new())","class":"linePartCov","hits":"1","order":"4563","possible_hits":"3",},
{"lineNum":"   36","line":"                    .with_inode(3),"},
{"lineNum":"   37","line":"            );"},
{"lineNum":"   38","line":"        }","class":"linePartCov","hits":"1","order":"4565","possible_hits":"2",},
{"lineNum":"   39","line":"        let files: HashSet<_> = vec![\"/a\", \"/b\", \"/c\"].iter().map(PathBuf::from).collect();","class":"lineCov","hits":"1","order":"4568","possible_hits":"1",},
{"lineNum":"   40","line":""},
{"lineNum":"   41","line":"        let mut fc: FileCataloger<_, Sha3Sum> = FileCataloger::new(fs);","class":"lineCov","hits":"1","order":"5118","possible_hits":"1",},
{"lineNum":"   42","line":"        for file in &files {","class":"linePartCov","hits":"2","order":"5119","possible_hits":"4",},
{"lineNum":"   43","line":"            fc.insert(file);","class":"lineCov","hits":"1","order":"5120","possible_hits":"1",},
{"lineNum":"   44","line":"        }"},
{"lineNum":"   45","line":""},
{"lineNum":"   46","line":"        let repeats = fc.get_repeats();","class":"linePartCov","hits":"1","order":"5145","possible_hits":"2",},
{"lineNum":"   47","line":"        assert!(repeats.is_empty());","class":"linePartCov","hits":"2","order":"5147","possible_hits":"4",},
{"lineNum":"   48","line":"    }","class":"linePartCov","hits":"2","order":"5148","possible_hits":"6",},
{"lineNum":"   49","line":""},
{"lineNum":"   50","line":"    #[test]"},
{"lineNum":"   51","line":"    fn dup_test_same_size() {","class":"linePartCov","hits":"1","order":"4646","possible_hits":"2",},
{"lineNum":"   52","line":"        // files with the same length but different contents"},
{"lineNum":"   53","line":"        // files should not be flagged as duplicates"},
{"lineNum":"   54","line":"        let fs = TestFileSystem::new();","class":"lineCov","hits":"1","order":"4647","possible_hits":"1",},
{"lineNum":"   55","line":"        {","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   56","line":"            let mut fs = fs.borrow_mut();","class":"lineCov","hits":"1","order":"4648","possible_hits":"1",},
{"lineNum":"   57","line":"            fs.create_dir(\"/\");","class":"linePartCov","hits":"2","order":"4649","possible_hits":"4",},
{"lineNum":"   58","line":"            fs.add(","class":"linePartCov","hits":"1","order":"4650","possible_hits":"7",},
{"lineNum":"   59","line":"                TestFile::new(\"/a\")","class":"lineCov","hits":"4","order":"4651","possible_hits":"4",},
{"lineNum":"   60","line":"                    .with_contents(String::from(\"AAAA\"))","class":"linePartCov","hits":"2","order":"4652","possible_hits":"3",},
{"lineNum":"   61","line":"                    .with_metadata(TestMD::new())","class":"linePartCov","hits":"1","order":"4653","possible_hits":"3",},
{"lineNum":"   62","line":"                    .with_inode(1),"},
{"lineNum":"   63","line":"            );"},
{"lineNum":"   64","line":"            fs.add(","class":"linePartCov","hits":"1","order":"4657","possible_hits":"7",},
{"lineNum":"   65","line":"                TestFile::new(\"/b\")","class":"lineCov","hits":"4","order":"4658","possible_hits":"4",},
{"lineNum":"   66","line":"                    .with_contents(String::from(\"BBBB\"))","class":"linePartCov","hits":"2","order":"4660","possible_hits":"3",},
{"lineNum":"   67","line":"                    .with_metadata(TestMD::new())","class":"linePartCov","hits":"1","order":"4661","possible_hits":"3",},
{"lineNum":"   68","line":"                    .with_inode(2),"},
{"lineNum":"   69","line":"            );"},
{"lineNum":"   70","line":"            fs.add(","class":"linePartCov","hits":"1","order":"4662","possible_hits":"7",},
{"lineNum":"   71","line":"                TestFile::new(\"/c\")","class":"lineCov","hits":"4","order":"4663","possible_hits":"4",},
{"lineNum":"   72","line":"                    .with_contents(String::from(\"CCCC\"))","class":"linePartCov","hits":"2","order":"4664","possible_hits":"3",},
{"lineNum":"   73","line":"                    .with_metadata(TestMD::new())","class":"linePartCov","hits":"1","order":"4665","possible_hits":"3",},
{"lineNum":"   74","line":"                    .with_inode(3),"},
{"lineNum":"   75","line":"            );"},
{"lineNum":"   76","line":"        }","class":"linePartCov","hits":"1","order":"4666","possible_hits":"2",},
{"lineNum":"   77","line":"        let files: HashSet<_> = vec![\"/a\", \"/b\", \"/c\"].iter().map(PathBuf::from).collect();","class":"lineCov","hits":"1","order":"4667","possible_hits":"1",},
{"lineNum":"   78","line":""},
{"lineNum":"   79","line":"        let mut fc: FileCataloger<_, Md5Sum> = FileCataloger::new(fs);","class":"lineCov","hits":"1","order":"4668","possible_hits":"1",},
{"lineNum":"   80","line":"        for file in &files {","class":"linePartCov","hits":"2","order":"4672","possible_hits":"4",},
{"lineNum":"   81","line":"            fc.insert(file);","class":"lineCov","hits":"1","order":"4689","possible_hits":"1",},
{"lineNum":"   82","line":"        }"},
{"lineNum":"   83","line":""},
{"lineNum":"   84","line":"        let repeats = fc.get_repeats();","class":"linePartCov","hits":"1","order":"4908","possible_hits":"2",},
{"lineNum":"   85","line":"        assert!(repeats.is_empty());","class":"linePartCov","hits":"2","order":"4953","possible_hits":"4",},
{"lineNum":"   86","line":"    }","class":"linePartCov","hits":"2","order":"4956","possible_hits":"6",},
{"lineNum":"   87","line":""},
{"lineNum":"   88","line":"    #[test]"},
{"lineNum":"   89","line":"    fn dup_test_same_start() {","class":"linePartCov","hits":"1","order":"5122","possible_hits":"2",},
{"lineNum":"   90","line":"        // files with the same length and first k bytes but different contents"},
{"lineNum":"   91","line":"        // files should not be flagged as duplicates"},
{"lineNum":"   92","line":"        let fs = TestFileSystem::new();","class":"lineCov","hits":"1","order":"5123","possible_hits":"1",},
{"lineNum":"   93","line":"        {","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   94","line":"            let mut fs = fs.borrow_mut();","class":"lineCov","hits":"1","order":"5124","possible_hits":"1",},
{"lineNum":"   95","line":"            fs.create_dir(\"/\");","class":"linePartCov","hits":"2","order":"5125","possible_hits":"4",},
{"lineNum":"   96","line":"            let start: String = ::std::iter::repeat(\'A\').take(4096).collect();","class":"lineCov","hits":"2","order":"5126","possible_hits":"2",},
{"lineNum":"   97","line":"            fs.add(","class":"linePartCov","hits":"1","order":"5127","possible_hits":"7",},
{"lineNum":"   98","line":"                TestFile::new(\"/a\")","class":"lineCov","hits":"4","order":"5128","possible_hits":"4",},
{"lineNum":"   99","line":"                    .with_contents(format!(\"{}_a\", start))","class":"linePartCov","hits":"2","order":"5129","possible_hits":"5",},
{"lineNum":"  100","line":"                    .with_metadata(TestMD::new())","class":"linePartCov","hits":"1","order":"5131","possible_hits":"3",},
{"lineNum":"  101","line":"                    .with_inode(1),"},
{"lineNum":"  102","line":"            );"},
{"lineNum":"  103","line":"            fs.add(","class":"linePartCov","hits":"1","order":"5132","possible_hits":"7",},
{"lineNum":"  104","line":"                TestFile::new(\"/b\")","class":"lineCov","hits":"4","order":"5133","possible_hits":"4",},
{"lineNum":"  105","line":"                    .with_contents(format!(\"{}_b\", start))","class":"linePartCov","hits":"2","order":"5134","possible_hits":"5",},
{"lineNum":"  106","line":"                    .with_metadata(TestMD::new())","class":"linePartCov","hits":"1","order":"5135","possible_hits":"3",},
{"lineNum":"  107","line":"                    .with_inode(2),"},
{"lineNum":"  108","line":"            );"},
{"lineNum":"  109","line":"            fs.add(","class":"linePartCov","hits":"1","order":"5136","possible_hits":"7",},
{"lineNum":"  110","line":"                TestFile::new(\"/c\")","class":"lineCov","hits":"4","order":"5137","possible_hits":"4",},
{"lineNum":"  111","line":"                    .with_contents(format!(\"{}_c\", start))","class":"linePartCov","hits":"2","order":"5138","possible_hits":"5",},
{"lineNum":"  112","line":"                    .with_metadata(TestMD::new())","class":"linePartCov","hits":"1","order":"5139","possible_hits":"3",},
{"lineNum":"  113","line":"                    .with_inode(3),"},
{"lineNum":"  114","line":"            );"},
{"lineNum":"  115","line":"        }","class":"linePartCov","hits":"2","order":"5140","possible_hits":"4",},
{"lineNum":"  116","line":"        let files: HashSet<_> = vec![\"/a\", \"/b\", \"/c\"].iter().map(PathBuf::from).collect();","class":"lineCov","hits":"1","order":"5141","possible_hits":"1",},
{"lineNum":"  117","line":""},
{"lineNum":"  118","line":"        let mut fc: FileCataloger<_, Md5Sum> = FileCataloger::new(fs);","class":"lineCov","hits":"1","order":"5142","possible_hits":"1",},
{"lineNum":"  119","line":"        for file in &files {","class":"linePartCov","hits":"2","order":"5143","possible_hits":"4",},
{"lineNum":"  120","line":"            fc.insert(file);","class":"lineCov","hits":"1","order":"5144","possible_hits":"1",},
{"lineNum":"  121","line":"        }"},
{"lineNum":"  122","line":""},
{"lineNum":"  123","line":"        let repeats = fc.get_repeats();","class":"linePartCov","hits":"1","order":"5181","possible_hits":"2",},
{"lineNum":"  124","line":"        assert!(repeats.is_empty());","class":"linePartCov","hits":"2","order":"5183","possible_hits":"4",},
{"lineNum":"  125","line":"    }","class":"linePartCov","hits":"2","order":"5184","possible_hits":"6",},
{"lineNum":"  126","line":""},
{"lineNum":"  127","line":"    #[test]"},
{"lineNum":"  128","line":"    fn dup_test_same_contents() {","class":"linePartCov","hits":"1","order":"4512","possible_hits":"15",},
{"lineNum":"  129","line":"        // unlinked files with the same contents should be flagged as duplicates"},
{"lineNum":"  130","line":"        let fs = TestFileSystem::new();","class":"lineCov","hits":"1","order":"4513","possible_hits":"1",},
{"lineNum":"  131","line":"        {","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  132","line":"            let mut fs = fs.borrow_mut();","class":"lineCov","hits":"1","order":"4554","possible_hits":"1",},
{"lineNum":"  133","line":"            fs.create_dir(\"/\");","class":"linePartCov","hits":"2","order":"4555","possible_hits":"4",},
{"lineNum":"  134","line":"            let contents: String = ::std::iter::repeat(\'A\').take(4096).collect();","class":"lineCov","hits":"2","order":"4557","possible_hits":"2",},
{"lineNum":"  135","line":"            fs.add(","class":"linePartCov","hits":"1","order":"4631","possible_hits":"7",},
{"lineNum":"  136","line":"                TestFile::new(\"/a\")","class":"lineCov","hits":"4","order":"4633","possible_hits":"4",},
{"lineNum":"  137","line":"                    .with_contents(contents.clone())","class":"linePartCov","hits":"1","order":"4634","possible_hits":"3",},
{"lineNum":"  138","line":"                    .with_metadata(TestMD::new())","class":"linePartCov","hits":"1","order":"4635","possible_hits":"3",},
{"lineNum":"  139","line":"                    .with_inode(1),"},
{"lineNum":"  140","line":"            );"},
{"lineNum":"  141","line":"            fs.add(","class":"linePartCov","hits":"1","order":"4636","possible_hits":"7",},
{"lineNum":"  142","line":"                TestFile::new(\"/b\")","class":"lineCov","hits":"4","order":"4637","possible_hits":"4",},
{"lineNum":"  143","line":"                    .with_contents(contents.clone())","class":"linePartCov","hits":"1","order":"4638","possible_hits":"3",},
{"lineNum":"  144","line":"                    .with_metadata(TestMD::new())","class":"linePartCov","hits":"1","order":"4639","possible_hits":"3",},
{"lineNum":"  145","line":"                    .with_inode(2),"},
{"lineNum":"  146","line":"            );"},
{"lineNum":"  147","line":"            fs.add(","class":"linePartCov","hits":"1","order":"4640","possible_hits":"6",},
{"lineNum":"  148","line":"                TestFile::new(\"/c\")","class":"lineCov","hits":"3","order":"4641","possible_hits":"3",},
{"lineNum":"  149","line":"                    .with_contents(contents)","class":"lineCov","hits":"2","order":"4642","possible_hits":"2",},
{"lineNum":"  150","line":"                    .with_metadata(TestMD::new())","class":"linePartCov","hits":"1","order":"4643","possible_hits":"3",},
{"lineNum":"  151","line":"                    .with_inode(3),"},
{"lineNum":"  152","line":"            );"},
{"lineNum":"  153","line":"        }","class":"linePartCov","hits":"1","order":"4644","possible_hits":"4",},
{"lineNum":"  154","line":"        let files: HashSet<_> = vec![\"/a\", \"/b\", \"/c\"].iter().map(PathBuf::from).collect();","class":"lineCov","hits":"1","order":"4645","possible_hits":"1",},
{"lineNum":"  155","line":""},
{"lineNum":"  156","line":"        let mut fc: FileCataloger<_, Md5Sum> = FileCataloger::new(fs);","class":"lineCov","hits":"1","order":"4654","possible_hits":"1",},
{"lineNum":"  157","line":"        for file in &files {","class":"linePartCov","hits":"2","order":"4673","possible_hits":"4",},
{"lineNum":"  158","line":"            fc.insert(file);","class":"lineCov","hits":"1","order":"4690","possible_hits":"1",},
{"lineNum":"  159","line":"        }"},
{"lineNum":"  160","line":""},
{"lineNum":"  161","line":"        let repeats = fc.get_repeats();","class":"linePartCov","hits":"1","order":"5033","possible_hits":"2",},
{"lineNum":"  162","line":"        assert_eq!(1, repeats.len());","class":"linePartCov","hits":"2","order":"5065","possible_hits":"4",},
{"lineNum":"  163","line":"        let dups = &repeats[0].0;","class":"lineCov","hits":"2","order":"5066","possible_hits":"2",},
{"lineNum":"  164","line":"        assert_eq!(3, dups.len());","class":"linePartCov","hits":"2","order":"5067","possible_hits":"6",},
{"lineNum":"  165","line":"        assert!(dups.contains(&PathBuf::from(\"/a\")));","class":"linePartCov","hits":"4","order":"5068","possible_hits":"5",},
{"lineNum":"  166","line":"        assert!(dups.contains(&PathBuf::from(\"/b\")));","class":"linePartCov","hits":"4","order":"5092","possible_hits":"5",},
{"lineNum":"  167","line":"    }","class":"linePartCov","hits":"2","order":"5094","possible_hits":"6",},
{"lineNum":"  168","line":""},
{"lineNum":"  169","line":"    #[test]"},
{"lineNum":"  170","line":"    fn dup_test_hard_links() {","class":"linePartCov","hits":"1","order":"4514","possible_hits":"15",},
{"lineNum":"  171","line":"        // hard links to the same file should be flagged as duplicates"},
{"lineNum":"  172","line":"        // even if they (somehow) have different contents"},
{"lineNum":"  173","line":"        let fs = TestFileSystem::new();","class":"lineCov","hits":"1","order":"4608","possible_hits":"1",},
{"lineNum":"  174","line":"        {","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  175","line":"            let mut fs = fs.borrow_mut();","class":"lineCov","hits":"1","order":"4609","possible_hits":"1",},
{"lineNum":"  176","line":"            fs.create_dir(\"/\");","class":"linePartCov","hits":"2","order":"4610","possible_hits":"4",},
{"lineNum":"  177","line":"            // note that all test files passed to FileCataloger must have metadata"},
{"lineNum":"  178","line":"            fs.add(","class":"linePartCov","hits":"2","order":"4612","possible_hits":"7",},
{"lineNum":"  179","line":"                TestFile::new(\"/a\")","class":"lineCov","hits":"4","order":"4613","possible_hits":"4",},
{"lineNum":"  180","line":"                    .with_inode(1)","class":"lineCov","hits":"1","order":"4614","possible_hits":"1",},
{"lineNum":"  181","line":"                    .with_contents(String::from(\"AAAA\"))","class":"linePartCov","hits":"2","order":"4616","possible_hits":"4",},
{"lineNum":"  182","line":"                    .with_metadata(TestMD::new()),","class":"linePartCov","hits":"1","order":"4617","possible_hits":"3",},
{"lineNum":"  183","line":"            );"},
{"lineNum":"  184","line":"            fs.add(","class":"linePartCov","hits":"2","order":"4619","possible_hits":"7",},
{"lineNum":"  185","line":"                TestFile::new(\"/b\")","class":"lineCov","hits":"4","order":"4620","possible_hits":"4",},
{"lineNum":"  186","line":"                    .with_inode(1)","class":"lineCov","hits":"1","order":"4622","possible_hits":"1",},
{"lineNum":"  187","line":"                    .with_contents(String::from(\"BBBB\"))","class":"linePartCov","hits":"2","order":"4624","possible_hits":"4",},
{"lineNum":"  188","line":"                    .with_metadata(TestMD::new()),","class":"linePartCov","hits":"1","order":"4627","possible_hits":"3",},
{"lineNum":"  189","line":"            );"},
{"lineNum":"  190","line":"        }","class":"linePartCov","hits":"1","order":"4630","possible_hits":"2",},
{"lineNum":"  191","line":"        let files: HashSet<_> = vec![\"/a\", \"/b\"].iter().map(PathBuf::from).collect();","class":"lineCov","hits":"1","order":"4632","possible_hits":"1",},
{"lineNum":"  192","line":""},
{"lineNum":"  193","line":"        let mut fc: FileCataloger<_, Md5Sum> = FileCataloger::new(fs);","class":"lineCov","hits":"1","order":"4655","possible_hits":"1",},
{"lineNum":"  194","line":"        for file in &files {","class":"linePartCov","hits":"2","order":"5095","possible_hits":"4",},
{"lineNum":"  195","line":"            fc.insert(file);","class":"lineCov","hits":"1","order":"5096","possible_hits":"1",},
{"lineNum":"  196","line":"        }"},
{"lineNum":"  197","line":""},
{"lineNum":"  198","line":"        let repeats = fc.get_repeats();","class":"linePartCov","hits":"1","order":"5110","possible_hits":"2",},
{"lineNum":"  199","line":"        assert_eq!(1, repeats.len());","class":"linePartCov","hits":"2","order":"5112","possible_hits":"4",},
{"lineNum":"  200","line":"        let dup = &repeats[0].0;","class":"lineCov","hits":"2","order":"5113","possible_hits":"2",},
{"lineNum":"  201","line":"        assert_eq!(2, dup.len());","class":"linePartCov","hits":"2","order":"5114","possible_hits":"6",},
{"lineNum":"  202","line":"        assert!(dup.contains(&PathBuf::from(\"/a\")));","class":"linePartCov","hits":"4","order":"5115","possible_hits":"5",},
{"lineNum":"  203","line":"        assert!(dup.contains(&PathBuf::from(\"/b\")));","class":"linePartCov","hits":"4","order":"5116","possible_hits":"5",},
{"lineNum":"  204","line":"    }","class":"linePartCov","hits":"2","order":"5117","possible_hits":"6",},
{"lineNum":"  205","line":""},
{"lineNum":"  206","line":"}"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "smllr-cd1387de2be9f35d", "date" : "2017-12-06 19:01:08", "instrumented" : 133, "covered" : 128,};
var merged_data = [];
