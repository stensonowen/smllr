var data = {lines:[
{"lineNum":"    1","line":"#[cfg(test)]"},
{"lineNum":"    2","line":"mod test {"},
{"lineNum":"    3","line":""},
{"lineNum":"    4","line":"    use ID;"},
{"lineNum":"    5","line":"    use actor::{FileActor, FileDeleter, FileLinker, FilePrinter};"},
{"lineNum":"    6","line":"    use actor::selector::{DateSelect, PathSelect, Selector};"},
{"lineNum":"    7","line":"    use vfs::{FileType, TestFile, TestFileSystem, TestMD};"},
{"lineNum":"    8","line":"    use catalog::proxy::Duplicates;"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"    use std::path::{Path, PathBuf};"},
{"lineNum":"   11","line":"    use std::time::{Duration, UNIX_EPOCH};"},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"    // selector tests"},
{"lineNum":"   14","line":""},
{"lineNum":"   15","line":"    #[test]"},
{"lineNum":"   16","line":"    fn select_shortest() {","class":"linePartCov","hits":"1","order":"4339","possible_hits":"15",},
{"lineNum":"   17","line":"        // select the file closest to the root"},
{"lineNum":"   18","line":"        let fs = TestFileSystem::new();","class":"lineCov","hits":"1","order":"4453","possible_hits":"1",},
{"lineNum":"   19","line":"        {","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   20","line":"            let mut fs = fs.borrow_mut();","class":"lineCov","hits":"1","order":"4454","possible_hits":"1",},
{"lineNum":"   21","line":"            fs.create_dir(\"/\");","class":"linePartCov","hits":"2","order":"4455","possible_hits":"4",},
{"lineNum":"   22","line":"            fs.create_dir(\"/x\");","class":"linePartCov","hits":"2","order":"4456","possible_hits":"3",},
{"lineNum":"   23","line":"            fs.create_dir(\"/x/y\");","class":"linePartCov","hits":"2","order":"4457","possible_hits":"3",},
{"lineNum":"   24","line":"            fs.create_dir(\"/x/y/z\");","class":"linePartCov","hits":"2","order":"4458","possible_hits":"3",},
{"lineNum":"   25","line":"            fs.add(TestFile::new(\"/a\"));","class":"lineCov","hits":"2","order":"4459","possible_hits":"2",},
{"lineNum":"   26","line":"            fs.add(TestFile::new(\"/x/b\"));","class":"lineCov","hits":"1","order":"4460","possible_hits":"1",},
{"lineNum":"   27","line":"            fs.add(TestFile::new(\"/x/y/c\"));","class":"lineCov","hits":"1","order":"4461","possible_hits":"1",},
{"lineNum":"   28","line":"            fs.add(TestFile::new(\"/x/y/z/d\"));","class":"lineCov","hits":"1","order":"4462","possible_hits":"1",},
{"lineNum":"   29","line":"        }","class":"linePartCov","hits":"1","order":"4463","possible_hits":"2",},
{"lineNum":"   30","line":"        let paths = vec![\"/a\", \"/x/b\", \"/x/y/c\", \"/x/y/z/d\"];","class":"lineCov","hits":"1","order":"4464","possible_hits":"1",},
{"lineNum":"   31","line":"        let files = Duplicates(paths.iter().map(PathBuf::from).collect());","class":"lineCov","hits":"4","order":"4465","possible_hits":"4",},
{"lineNum":"   32","line":"        let shortest = PathSelect::new(fs).select(&files);","class":"lineCov","hits":"3","order":"4466","possible_hits":"3",},
{"lineNum":"   33","line":"        assert_eq!(shortest, Path::new(\"/a\"));","class":"linePartCov","hits":"3","order":"4467","possible_hits":"7",},
{"lineNum":"   34","line":"    }","class":"linePartCov","hits":"2","order":"4468","possible_hits":"5",},
{"lineNum":"   35","line":""},
{"lineNum":"   36","line":"    #[test]"},
{"lineNum":"   37","line":"    fn select_longest() {","class":"linePartCov","hits":"1","order":"4066","possible_hits":"14",},
{"lineNum":"   38","line":"        // select the file farthest from to the root"},
{"lineNum":"   39","line":"        let fs = TestFileSystem::new();","class":"lineCov","hits":"1","order":"4067","possible_hits":"1",},
{"lineNum":"   40","line":"        {","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   41","line":"            let mut fs = fs.borrow_mut();","class":"lineCov","hits":"1","order":"4068","possible_hits":"1",},
{"lineNum":"   42","line":"            fs.create_dir(\"/\");","class":"linePartCov","hits":"2","order":"4069","possible_hits":"4",},
{"lineNum":"   43","line":"            fs.create_dir(\"/x\");","class":"linePartCov","hits":"2","order":"4070","possible_hits":"3",},
{"lineNum":"   44","line":"            fs.create_dir(\"/x/y\");","class":"linePartCov","hits":"2","order":"4071","possible_hits":"3",},
{"lineNum":"   45","line":"            fs.create_dir(\"/x/y/z\");","class":"linePartCov","hits":"2","order":"4072","possible_hits":"3",},
{"lineNum":"   46","line":"            fs.add(TestFile::new(\"/a\"));","class":"lineCov","hits":"2","order":"4073","possible_hits":"2",},
{"lineNum":"   47","line":"            fs.add(TestFile::new(\"/x/b\"));","class":"lineCov","hits":"1","order":"4101","possible_hits":"1",},
{"lineNum":"   48","line":"            fs.add(TestFile::new(\"/x/y/c\"));","class":"lineCov","hits":"1","order":"4103","possible_hits":"1",},
{"lineNum":"   49","line":"            fs.add(TestFile::new(\"/x/y/z/d\"));","class":"lineCov","hits":"1","order":"4104","possible_hits":"1",},
{"lineNum":"   50","line":"        }","class":"linePartCov","hits":"1","order":"4106","possible_hits":"2",},
{"lineNum":"   51","line":"        let paths = vec![\"/a\", \"/x/b\", \"/x/y/c\", \"/x/y/z/d\"];","class":"lineCov","hits":"1","order":"4107","possible_hits":"1",},
{"lineNum":"   52","line":"        let files = Duplicates(paths.iter().map(PathBuf::from).collect());","class":"lineCov","hits":"4","order":"4109","possible_hits":"4",},
{"lineNum":"   53","line":"        let mut selector = PathSelect::new(fs);","class":"lineCov","hits":"2","order":"4111","possible_hits":"2",},
{"lineNum":"   54","line":"        selector.reverse();","class":"linePartCov","hits":"1","order":"4112","possible_hits":"2",},
{"lineNum":"   55","line":"        let longest = selector.select(&files);","class":"lineCov","hits":"2","order":"4116","possible_hits":"2",},
{"lineNum":"   56","line":"        assert_eq!(longest, Path::new(\"/x/y/z/d\"));","class":"linePartCov","hits":"3","order":"4136","possible_hits":"7",},
{"lineNum":"   57","line":"    }","class":"linePartCov","hits":"2","order":"4140","possible_hits":"5",},
{"lineNum":"   58","line":""},
{"lineNum":"   59","line":"    #[test]"},
{"lineNum":"   60","line":"    fn select_newest() {","class":"linePartCov","hits":"1","order":"4340","possible_hits":"14",},
{"lineNum":"   61","line":"        // select the file most recently modified"},
{"lineNum":"   62","line":"        let fs = TestFileSystem::new();","class":"lineCov","hits":"1","order":"4341","possible_hits":"1",},
{"lineNum":"   63","line":"        let time_a = UNIX_EPOCH + Duration::new(1, 0); // + 1 second","class":"lineCov","hits":"1","order":"4342","possible_hits":"1",},
{"lineNum":"   64","line":"        let time_b = UNIX_EPOCH + Duration::new(2, 0); // + 2 seconds","class":"lineCov","hits":"1","order":"4352","possible_hits":"1",},
{"lineNum":"   65","line":"        let time_c = UNIX_EPOCH + Duration::new(3, 0); // + 3 seconds","class":"lineCov","hits":"1","order":"4354","possible_hits":"1",},
{"lineNum":"   66","line":"        let time_d = UNIX_EPOCH + Duration::new(4, 0); // + 4 seconds","class":"lineCov","hits":"1","order":"4355","possible_hits":"1",},
{"lineNum":"   67","line":"        let md_a = TestMD::new().with_creation_time(time_a);","class":"lineCov","hits":"1","order":"4356","possible_hits":"1",},
{"lineNum":"   68","line":"        let md_b = TestMD::new().with_creation_time(time_b);","class":"lineCov","hits":"1","order":"4362","possible_hits":"1",},
{"lineNum":"   69","line":"        let md_c = TestMD::new().with_creation_time(time_c);","class":"lineCov","hits":"1","order":"4363","possible_hits":"1",},
{"lineNum":"   70","line":"        let md_d = TestMD::new().with_creation_time(time_d);","class":"lineCov","hits":"1","order":"4365","possible_hits":"1",},
{"lineNum":"   71","line":"        {","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   72","line":"            let mut fs = fs.borrow_mut();","class":"lineCov","hits":"1","order":"4367","possible_hits":"1",},
{"lineNum":"   73","line":"            fs.create_dir(\"/\");","class":"linePartCov","hits":"2","order":"4368","possible_hits":"4",},
{"lineNum":"   74","line":"            fs.create_dir(\"/x\");","class":"linePartCov","hits":"2","order":"4369","possible_hits":"3",},
{"lineNum":"   75","line":"            fs.create_dir(\"/x/y\");","class":"linePartCov","hits":"2","order":"4371","possible_hits":"3",},
{"lineNum":"   76","line":"            fs.create_dir(\"/x/y/z\");","class":"linePartCov","hits":"2","order":"4373","possible_hits":"3",},
{"lineNum":"   77","line":"            fs.add(TestFile::new(\"/a\").with_metadata(md_a));","class":"linePartCov","hits":"2","order":"4375","possible_hits":"3",},
{"lineNum":"   78","line":"            fs.add(TestFile::new(\"/x/b\").with_metadata(md_b));","class":"linePartCov","hits":"2","order":"4376","possible_hits":"3",},
{"lineNum":"   79","line":"            fs.add(TestFile::new(\"/x/y/c\").with_metadata(md_c));","class":"linePartCov","hits":"2","order":"4377","possible_hits":"3",},
{"lineNum":"   80","line":"            fs.add(TestFile::new(\"/x/y/z/d\").with_metadata(md_d));","class":"linePartCov","hits":"2","order":"4378","possible_hits":"3",},
{"lineNum":"   81","line":"        }","class":"linePartCov","hits":"1","order":"4379","possible_hits":"2",},
{"lineNum":"   82","line":"        let paths = vec![\"/a\", \"/x/b\", \"/x/y/c\", \"/x/y/z/d\"];","class":"lineCov","hits":"1","order":"4380","possible_hits":"1",},
{"lineNum":"   83","line":"        let files = Duplicates(paths.iter().map(PathBuf::from).collect());","class":"lineCov","hits":"4","order":"4381","possible_hits":"4",},
{"lineNum":"   84","line":"        let newest = DateSelect::new(fs).select(&files);","class":"lineCov","hits":"3","order":"4382","possible_hits":"3",},
{"lineNum":"   85","line":"        assert_eq!(newest, Path::new(\"/x/y/z/d\"));","class":"linePartCov","hits":"2","order":"4444","possible_hits":"6",},
{"lineNum":"   86","line":"    }","class":"linePartCov","hits":"2","order":"4445","possible_hits":"4",},
{"lineNum":"   87","line":""},
{"lineNum":"   88","line":"    #[test]"},
{"lineNum":"   89","line":"    fn select_oldest() {","class":"linePartCov","hits":"1","order":"4393","possible_hits":"14",},
{"lineNum":"   90","line":"        // select the file least recently modified"},
{"lineNum":"   91","line":"        let fs = TestFileSystem::new();","class":"lineCov","hits":"1","order":"4394","possible_hits":"1",},
{"lineNum":"   92","line":"        let time_a = UNIX_EPOCH + Duration::new(1, 0); // + 1 second","class":"lineCov","hits":"1","order":"4395","possible_hits":"1",},
{"lineNum":"   93","line":"        let time_b = UNIX_EPOCH + Duration::new(2, 0); // + 2 seconds","class":"lineCov","hits":"1","order":"4396","possible_hits":"1",},
{"lineNum":"   94","line":"        let time_c = UNIX_EPOCH + Duration::new(3, 0); // + 3 seconds","class":"lineCov","hits":"1","order":"4397","possible_hits":"1",},
{"lineNum":"   95","line":"        let time_d = UNIX_EPOCH + Duration::new(4, 0); // + 4 seconds","class":"lineCov","hits":"1","order":"4398","possible_hits":"1",},
{"lineNum":"   96","line":"        let md_a = TestMD::new().with_creation_time(time_a);","class":"lineCov","hits":"1","order":"4399","possible_hits":"1",},
{"lineNum":"   97","line":"        let md_b = TestMD::new().with_creation_time(time_b);","class":"lineCov","hits":"1","order":"4400","possible_hits":"1",},
{"lineNum":"   98","line":"        let md_c = TestMD::new().with_creation_time(time_c);","class":"lineCov","hits":"1","order":"4401","possible_hits":"1",},
{"lineNum":"   99","line":"        let md_d = TestMD::new().with_creation_time(time_d);","class":"lineCov","hits":"1","order":"4402","possible_hits":"1",},
{"lineNum":"  100","line":"        {","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  101","line":"            let mut fs = fs.borrow_mut();","class":"lineCov","hits":"1","order":"4403","possible_hits":"1",},
{"lineNum":"  102","line":"            fs.create_dir(\"/\");","class":"linePartCov","hits":"2","order":"4404","possible_hits":"4",},
{"lineNum":"  103","line":"            fs.create_dir(\"/x\");","class":"linePartCov","hits":"2","order":"4406","possible_hits":"3",},
{"lineNum":"  104","line":"            fs.create_dir(\"/x/y\");","class":"linePartCov","hits":"2","order":"4408","possible_hits":"3",},
{"lineNum":"  105","line":"            fs.create_dir(\"/x/y/z\");","class":"linePartCov","hits":"2","order":"4411","possible_hits":"3",},
{"lineNum":"  106","line":"            fs.add(TestFile::new(\"/a\").with_metadata(md_a));","class":"linePartCov","hits":"2","order":"4414","possible_hits":"3",},
{"lineNum":"  107","line":"            fs.add(TestFile::new(\"/x/b\").with_metadata(md_b));","class":"linePartCov","hits":"2","order":"4416","possible_hits":"3",},
{"lineNum":"  108","line":"            fs.add(TestFile::new(\"/x/y/c\").with_metadata(md_c));","class":"linePartCov","hits":"2","order":"4418","possible_hits":"3",},
{"lineNum":"  109","line":"            fs.add(TestFile::new(\"/x/y/z/d\").with_metadata(md_d));","class":"linePartCov","hits":"2","order":"4419","possible_hits":"3",},
{"lineNum":"  110","line":"        }","class":"linePartCov","hits":"1","order":"4421","possible_hits":"2",},
{"lineNum":"  111","line":"        let paths = vec![\"/a\", \"/x/b\", \"/x/y/c\", \"/x/y/z/d\"];","class":"lineCov","hits":"1","order":"4423","possible_hits":"1",},
{"lineNum":"  112","line":"        let files = Duplicates(paths.iter().map(PathBuf::from).collect());","class":"lineCov","hits":"4","order":"4425","possible_hits":"4",},
{"lineNum":"  113","line":""},
{"lineNum":"  114","line":"        let mut selector = DateSelect::new(fs.clone());","class":"linePartCov","hits":"2","order":"4428","possible_hits":"3",},
{"lineNum":"  115","line":"        selector.reverse();","class":"linePartCov","hits":"1","order":"4431","possible_hits":"2",},
{"lineNum":"  116","line":"        let oldest = selector.select(&files);","class":"lineCov","hits":"2","order":"4436","possible_hits":"2",},
{"lineNum":"  117","line":"        assert_eq!(oldest, Path::new(\"/a\"));","class":"linePartCov","hits":"3","order":"4448","possible_hits":"7",},
{"lineNum":"  118","line":"    }","class":"linePartCov","hits":"2","order":"4449","possible_hits":"6",},
{"lineNum":"  119","line":""},
{"lineNum":"  120","line":"    // actor tests"},
{"lineNum":"  121","line":""},
{"lineNum":"  122","line":"    #[test]"},
{"lineNum":"  123","line":"    fn actor_print() {","class":"linePartCov","hits":"1","order":"2353","possible_hits":"11",},
{"lineNum":"  124","line":"        // run `FilePrinter::act()` on a set of duplicates"},
{"lineNum":"  125","line":"        // verify the filesystem doesn\'t change"},
{"lineNum":"  126","line":""},
{"lineNum":"  127","line":"        let fs = TestFileSystem::new();","class":"lineCov","hits":"1","order":"2354","possible_hits":"1",},
{"lineNum":"  128","line":"        {","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  129","line":"            let mut fs = fs.borrow_mut();","class":"lineCov","hits":"1","order":"2540","possible_hits":"1",},
{"lineNum":"  130","line":"            fs.create_dir(\"/\");","class":"linePartCov","hits":"2","order":"2556","possible_hits":"4",},
{"lineNum":"  131","line":"            fs.add(TestFile::new(\"/a\").with_metadata(TestMD::new()));","class":"linePartCov","hits":"2","order":"2846","possible_hits":"4",},
{"lineNum":"  132","line":"            fs.create_dir(\"/x\");","class":"linePartCov","hits":"2","order":"3038","possible_hits":"3",},
{"lineNum":"  133","line":"            fs.add(TestFile::new(\"/x/b\").with_metadata(TestMD::new()));","class":"linePartCov","hits":"2","order":"3039","possible_hits":"4",},
{"lineNum":"  134","line":"            fs.add(TestFile::new(\"/x/c\").with_metadata(TestMD::new()));","class":"linePartCov","hits":"2","order":"3048","possible_hits":"4",},
{"lineNum":"  135","line":"        };","class":"linePartCov","hits":"1","order":"3049","possible_hits":"2",},
{"lineNum":"  136","line":"        let paths = vec![\"/a\", \"/x/b\", \"/x/c\"];","class":"lineCov","hits":"1","order":"3053","possible_hits":"1",},
{"lineNum":"  137","line":"        let files = Duplicates(paths.iter().map(PathBuf::from).collect());","class":"lineCov","hits":"4","order":"3078","possible_hits":"4",},
{"lineNum":"  138","line":""},
{"lineNum":"  139","line":"        let selector = PathSelect::new(fs.clone());","class":"linePartCov","hits":"2","order":"3206","possible_hits":"3",},
{"lineNum":"  140","line":"        let mut actor = FilePrinter::new(fs.clone(), selector);","class":"lineCov","hits":"1","order":"3230","possible_hits":"1",},
{"lineNum":"  141","line":"        actor.act(files);","class":"linePartCov","hits":"1","order":"3236","possible_hits":"2",},
{"lineNum":"  142","line":"        assert_eq!(5, fs.borrow().num_elements());","class":"linePartCov","hits":"3","order":"3498","possible_hits":"4",},
{"lineNum":"  143","line":"    }","class":"linePartCov","hits":"1","order":"3502","possible_hits":"5",},
{"lineNum":"  144","line":""},
{"lineNum":"  145","line":"    #[test]"},
{"lineNum":"  146","line":"    fn actor_delete() {","class":"linePartCov","hits":"1","order":"2496","possible_hits":"11",},
{"lineNum":"  147","line":"        // run `FileDeleter::act()` on a set of duplicates"},
{"lineNum":"  148","line":"        // verify the filesystem only has one file left"},
{"lineNum":"  149","line":""},
{"lineNum":"  150","line":"        let fs = TestFileSystem::new();","class":"lineCov","hits":"1","order":"2498","possible_hits":"1",},
{"lineNum":"  151","line":"        {","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  152","line":"            let mut fs = fs.borrow_mut();","class":"lineCov","hits":"1","order":"4313","possible_hits":"1",},
{"lineNum":"  153","line":"            fs.create_dir(\"/\");","class":"linePartCov","hits":"2","order":"4314","possible_hits":"4",},
{"lineNum":"  154","line":"            fs.add(TestFile::new(\"/a\").with_metadata(TestMD::new()));","class":"linePartCov","hits":"2","order":"4315","possible_hits":"4",},
{"lineNum":"  155","line":"            fs.create_dir(\"/x\");","class":"linePartCov","hits":"2","order":"4316","possible_hits":"3",},
{"lineNum":"  156","line":"            fs.add(TestFile::new(\"/x/b\").with_metadata(TestMD::new()));","class":"linePartCov","hits":"2","order":"4317","possible_hits":"4",},
{"lineNum":"  157","line":"            fs.add(TestFile::new(\"/x/c\").with_metadata(TestMD::new()));","class":"linePartCov","hits":"2","order":"4318","possible_hits":"4",},
{"lineNum":"  158","line":"        };","class":"linePartCov","hits":"1","order":"4319","possible_hits":"2",},
{"lineNum":"  159","line":"        let paths = vec![\"/a\", \"/x/b\", \"/x/c\"];","class":"lineCov","hits":"1","order":"4320","possible_hits":"1",},
{"lineNum":"  160","line":"        let files = Duplicates(paths.iter().map(PathBuf::from).collect());","class":"lineCov","hits":"4","order":"4321","possible_hits":"4",},
{"lineNum":"  161","line":""},
{"lineNum":"  162","line":"        let selector = PathSelect::new(fs.clone());","class":"linePartCov","hits":"2","order":"4322","possible_hits":"3",},
{"lineNum":"  163","line":"        let mut actor = FileDeleter::new(fs.clone(), selector);","class":"lineCov","hits":"1","order":"4323","possible_hits":"1",},
{"lineNum":"  164","line":"        actor.act(files);","class":"linePartCov","hits":"1","order":"4329","possible_hits":"2",},
{"lineNum":"  165","line":"        assert_eq!(3, fs.borrow().num_elements());","class":"linePartCov","hits":"3","order":"4370","possible_hits":"4",},
{"lineNum":"  166","line":"    }","class":"linePartCov","hits":"1","order":"4372","possible_hits":"5",},
{"lineNum":"  167","line":""},
{"lineNum":"  168","line":"    #[test]"},
{"lineNum":"  169","line":"    fn actor_link() {","class":"linePartCov","hits":"1","order":"2457","possible_hits":"20",},
{"lineNum":"  170","line":"        // run `FileLinker::act()` on a set of duplicates"},
{"lineNum":"  171","line":"        // verify the filesystem only has links to one file"},
{"lineNum":"  172","line":""},
{"lineNum":"  173","line":"        let fs = TestFileSystem::new();","class":"lineCov","hits":"1","order":"2459","possible_hits":"1",},
{"lineNum":"  174","line":"        {","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  175","line":"            let mut fs = fs.borrow_mut();","class":"lineCov","hits":"1","order":"4191","possible_hits":"1",},
{"lineNum":"  176","line":"            fs.create_dir(\"/\"); // inode #0","class":"linePartCov","hits":"2","order":"4192","possible_hits":"4",},
{"lineNum":"  177","line":"            fs.add(","class":"linePartCov","hits":"3","order":"4193","possible_hits":"5",},
{"lineNum":"  178","line":"                TestFile::new(\"/a\")","class":"lineCov","hits":"1","order":"4199","possible_hits":"1",},
{"lineNum":"  179","line":"                    .with_inode(1)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  180","line":"                    .with_metadata(TestMD::new()),","class":"linePartCov","hits":"3","order":"4201","possible_hits":"5",},
{"lineNum":"  181","line":"            );","class":"lineCov","hits":"1","order":"4202","possible_hits":"1",},
{"lineNum":"  182","line":"            fs.add(","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  183","line":"                TestFile::new(\"/b\")","class":"linePartCov","hits":"3","order":"4203","possible_hits":"5",},
{"lineNum":"  184","line":"                    .with_inode(2)","class":"lineCov","hits":"1","order":"4204","possible_hits":"1",},
{"lineNum":"  185","line":"                    .with_metadata(TestMD::new()),","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  186","line":"            );","class":"linePartCov","hits":"1","order":"4205","possible_hits":"2",},
{"lineNum":"  187","line":"            fs.add(","class":"lineCov","hits":"1","order":"4206","possible_hits":"1",},
{"lineNum":"  188","line":"                TestFile::new(\"/c\")","class":"lineCov","hits":"4","order":"4207","possible_hits":"4",},
{"lineNum":"  189","line":"                    .with_inode(3)"},
{"lineNum":"  190","line":"                    .with_metadata(TestMD::new()),"},
{"lineNum":"  191","line":"            );"},
{"lineNum":"  192","line":"        };","class":"linePartCov","hits":"3","order":"4208","possible_hits":"4",},
{"lineNum":"  193","line":"        let paths = vec![\"/a\", \"/b\", \"/c\"];","class":"linePartCov","hits":"3","order":"4209","possible_hits":"4",},
{"lineNum":"  194","line":"        let files = Duplicates(paths.iter().map(PathBuf::from).collect());"},
{"lineNum":"  195","line":"","class":"lineCov","hits":"1","order":"4210","possible_hits":"1",},
{"lineNum":"  196","line":"        // currently all files are identical and distinct","class":"lineCov","hits":"1","order":"4211","possible_hits":"1",},
{"lineNum":"  197","line":"        // remember that the root dir counts and has an inode","class":"linePartCov","hits":"1","order":"4212","possible_hits":"2",},
{"lineNum":"  198","line":"        assert_eq!(4, fs.borrow().num_elements(), \"sanity check\");"},
{"lineNum":"  199","line":"        assert_eq!(4, fs.borrow().num_inodes(), \"sanity check\");"},
{"lineNum":"  200","line":"","class":"linePartCov","hits":"3","order":"4295","possible_hits":"4",},
{"lineNum":"  201","line":"        let selector = PathSelect::new(fs.clone());","class":"linePartCov","hits":"3","order":"4296","possible_hits":"4",},
{"lineNum":"  202","line":"        let mut actor = FileLinker::new(fs.clone(), selector);","class":"linePartCov","hits":"1","order":"4312","possible_hits":"6",},
{"lineNum":"  203","line":"        actor.act(files);"},
{"lineNum":"  204","line":""},
{"lineNum":"  205","line":"        // after acting, all files should have the same inode","class":"linePartCov","hits":"1","order":"2422","possible_hits":"20",},
{"lineNum":"  206","line":"        assert_eq!(4, fs.borrow().num_elements());"},
{"lineNum":"  207","line":"        assert_eq!(2, fs.borrow().num_inodes());"},
{"lineNum":"  208","line":"    }"},
{"lineNum":"  209","line":"","class":"lineCov","hits":"1","order":"2423","possible_hits":"1",},
{"lineNum":"  210","line":"    #[test]","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  211","line":"    fn actor_link_across_devices() {","class":"lineCov","hits":"1","order":"4001","possible_hits":"1",},
{"lineNum":"  212","line":"        // run `FileLinker::act()` on a set of duplicates spread across devices","class":"linePartCov","hits":"3","order":"4002","possible_hits":"6",},
{"lineNum":"  213","line":"        // verify the filesystem doesn\'t fail and doesn\'t change anything","class":"lineCov","hits":"2","order":"4008","possible_hits":"2",},
{"lineNum":"  214","line":"","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  215","line":"        let fs = TestFileSystem::new();","class":"linePartCov","hits":"3","order":"4015","possible_hits":"4",},
{"lineNum":"  216","line":"        {","class":"lineCov","hits":"1","order":"4016","possible_hits":"1",},
{"lineNum":"  217","line":"            let mut fs = fs.borrow_mut();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  218","line":"            fs.add(","class":"linePartCov","hits":"3","order":"4017","possible_hits":"4",},
{"lineNum":"  219","line":"                TestFile::new(\"/\")","class":"lineCov","hits":"1","order":"4018","possible_hits":"1",},
{"lineNum":"  220","line":"                    .with_kind(FileType::Dir)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  221","line":"                    .with_metadata(TestMD::new().with_id(ID { inode: 1, dev: 10 })),","class":"linePartCov","hits":"3","order":"4019","possible_hits":"4",},
{"lineNum":"  222","line":"            );","class":"lineCov","hits":"1","order":"4020","possible_hits":"1",},
{"lineNum":"  223","line":"            fs.add(","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  224","line":"                TestFile::new(\"/a\").with_metadata(TestMD::new().with_id(ID { inode: 2, dev: 20 })),","class":"linePartCov","hits":"1","order":"4021","possible_hits":"2",},
{"lineNum":"  225","line":"            );","class":"lineCov","hits":"1","order":"4022","possible_hits":"1",},
{"lineNum":"  226","line":"            fs.add(","class":"lineCov","hits":"4","order":"4023","possible_hits":"4",},
{"lineNum":"  227","line":"                TestFile::new(\"/b\").with_metadata(TestMD::new().with_id(ID { inode: 3, dev: 20 })),"},
{"lineNum":"  228","line":"            );"},
{"lineNum":"  229","line":"            fs.add("},
{"lineNum":"  230","line":"                TestFile::new(\"/c\").with_metadata(TestMD::new().with_id(ID { inode: 4, dev: 20 })),","class":"linePartCov","hits":"3","order":"4024","possible_hits":"4",},
{"lineNum":"  231","line":"            );","class":"linePartCov","hits":"3","order":"4025","possible_hits":"4",},
{"lineNum":"  232","line":"        };"},
{"lineNum":"  233","line":"        let paths = vec![\"/a\", \"/b\", \"/c\"];","class":"lineCov","hits":"1","order":"4151","possible_hits":"1",},
{"lineNum":"  234","line":"        let files = Duplicates(paths.iter().map(PathBuf::from).collect());","class":"lineCov","hits":"1","order":"4152","possible_hits":"1",},
{"lineNum":"  235","line":"","class":"linePartCov","hits":"1","order":"4158","possible_hits":"2",},
{"lineNum":"  236","line":"        // currently all files are identical and distinct"},
{"lineNum":"  237","line":"        // remember that the root dir counts and has an inode"},
{"lineNum":"  238","line":"        assert_eq!(4, fs.borrow().num_elements(), \"sanity check\");","class":"linePartCov","hits":"3","order":"4187","possible_hits":"4",},
{"lineNum":"  239","line":"        assert_eq!(4, fs.borrow().num_inodes(), \"sanity check\");","class":"linePartCov","hits":"3","order":"4188","possible_hits":"4",},
{"lineNum":"  240","line":"","class":"linePartCov","hits":"1","order":"4189","possible_hits":"6",},
{"lineNum":"  241","line":"        let selector = PathSelect::new(fs.clone());"},
{"lineNum":"  242","line":"        let mut actor = FileLinker::new(fs.clone(), selector);"},
{"lineNum":"  243","line":"        actor.act(files);"},
{"lineNum":"  244","line":""},
{"lineNum":"  245","line":"        // after acting, nothing should have happened (except a warning message)"},
{"lineNum":"  246","line":"        assert_eq!(4, fs.borrow().num_elements());"},
{"lineNum":"  247","line":"        assert_eq!(4, fs.borrow().num_inodes());"},
{"lineNum":"  248","line":"    }"},
{"lineNum":"  249","line":"}"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "smllr-cd1387de2be9f35d", "date" : "2017-11-27 19:54:30", "instrumented" : 178, "covered" : 163,};
var merged_data = [];
